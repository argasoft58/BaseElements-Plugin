=======================================================================
macOS
=======================================================================

On macOS the plugin is built using macOS 10.14.4 and Xcode 10.2.
Execute the following command to make sure that the Xcode Command Line Tools are installed.

	xcode-select --install

Download the FileMaker External Plug-In API from

	http://www.filemaker.com/support/technologies/

and place the FMWrapper.framework in the ${SRCROOT}/Libraries/macOS directory.

In this guide, ${SRCROOT} is the path to the project root (i.e. BaseElements-Plugin) directory.

The plugin commands below also use some other dev tools which can be installed with :

curl -O -L http://ftpmirror.gnu.org/autoconf/autoconf-2.69.tar.gz
curl -O -L http://ftpmirror.gnu.org/automake/automake-1.15.tar.gz
curl -O -L http://ftpmirror.gnu.org/libtool/libtool-2.4.6.tar.gz

tar -xzf autoconf-2.69.tar.gz
tar -xzf automake-1.15.tar.gz
tar -xzf libtool-2.4.6.tar.gz

cd autoconf-2.69
./configure
make
sudo make install
cd ..

cd automake-1.15
./configure
make
sudo make install
cd ..

cd libtool-2.4.6
./configure
make
sudo make install
cd ..


=======================================================================
Boost - 1.72_0
=======================================================================

Boost is available from

	http://www.boost.org/

and extract the archive. Then

	cd boost_1_72_0
	./bootstrap.sh
	./b2 architecture=x86 address-model=64 link=static runtime-link=static install --prefix=build --with-program_options --with-regex --with-date_time --with-filesystem --with-thread --with-system cxxflags="-mmacosx-version-min=10.9 -stdlib=libc++" linkflags="-stdlib=libc++"

Copy the header and library files.

	cp -R ./build/include/boost "${SRCROOT}/Headers/"
	cp ./build/lib/*.a "${SRCROOT}/Libraries/macOS"


=======================================================================
Jansson - 2.5
=======================================================================

Download the source as a ZIP archive from

	https://github.com/GoyaPtyLtd/jansson

and extract the archive. Then

	cd jansson-master
	autoreconf -i
	./configure --prefix="$(pwd)/build" CFLAGS="-mmacosx-version-min=10.9"
	make install

Copy the header and library files.

	cp ./build/include/jansson.h ./build/include/jansson_config.h "${SRCROOT}/Headers/"
	cp ./build/lib/libjansson.a "${SRCROOT}/Libraries/macOS/"

=======================================================================
OpenSSL - 1.1.1d
=======================================================================

Download the latest openssl source from

	http://www.openssl.org/source/

and extract the archive. Then

	cd openssl-1.1.1d
	./Configure darwin64-x86_64-cc -mmacosx-version-min=10.7 --prefix="$(pwd)/build"
	make install

Copy the header and library files.

	cp -R ./build/include/openssl "${SRCROOT}/Headers/"
	cp ./build/lib/libcrypto.a ./build/lib/libssl.a "${SRCROOT}/Libraries/macOS/"
	
You need to setup the root folder for the libssh build later
	
export OPENSSLROOT=$(pwd)

=======================================================================
libssh2 - 1.9.0
=======================================================================

Download the source from

	http://www.libssh2.org/

and extract the archive. Then

(don't forget to set the OPENSSLROOT environment variable above)

	cd libssh2-1.9.0
	./configure --with-libz --with-crypto=openssl --without-libgcrypt --prefix="$(pwd)/build" --exec-prefix="$(pwd)/build" --disable-shared --with-libssl-prefix="${OPENSSLROOT}/build"
	make install

Copy the header and library files.

	cp -R ./build/include "${SRCROOT}/Headers/libssh2"
	cp ./build/lib/libssh2.a "${SRCROOT}/Libraries/macOS"
	
You need to setup the root folder for the curl build later
	
export LIBSSHROOT=$(pwd)

=======================================================================
libcurl - 7.68
=======================================================================

Note: OpenSSL & libssh2 must be built before building libcurl.

Download the source from

	http://curl.haxx.se/download.html

and extract the archive. Then

	cd curl-7.68.0
	export MACOSX_DEPLOYMENT_TARGET="10.9"
	./configure CFLAGS="-mmacosx-version-min=10.9" CPPFLAGS="-I${OPENSSLROOT}/build/include" LDFLAGS="-L${OPENSSLROOT}/build/lib" --disable-dependency-tracking --disable-shared --with-libz --prefix="$(pwd)/build" --with-libssh2="${LIBSSHROOT}/build"
	make install

Copy the header and library files.

	cp -R ./build/include/curl "${SRCROOT}/Headers/"
	cp ./build/lib/libcurl.a "${SRCROOT}/Libraries/macOS"
	
	
export CURLROOT=$(pwd)


=======================================================================
liboauth - 1.0.3
=======================================================================

Notes : requires openssl, and libcurl be already installed.

Download the source from

	http://liboauth.sourceforge.net/

and extract the archive. Then

	cd liboauth-1.0.3
	patch -Np1 -i ~/Downloads/liboauth-1.0.3-openssl-1.1.0-3.patch
	./configure CPPFLAGS="-Ibuild./build/include" LDFLAGS="-L${OPENSSLROOT}/build/lib"
	make

Copy the header and library files.

	cp ./src/oauth.h "${SRCROOT}/Headers/"
	cp ./src/.libs/liboauth.a "${SRCROOT}/Libraries/macOS"


=======================================================================
mimetic - 0.9.8
=======================================================================

Download the source from

	http://www.codesink.org/mimetic_mime_library.html#download

and extract the archive. Then

	cd mimetic-0.9.8

Edit the file mimetic/codec/base64.h to replace line 72

	*out = NL; ++out;

with

	*out = CR; ++out;
	*out = LF; ++out;

Then build the library.

	./configure CXXFLAGS="-stdlib=libc++ -mmacosx-version-min=10.9" LDFLAGS="-stdlib=libc++" --prefix="$(pwd)/build"
	make install

Copy the header and library files.

	cp -R ./build/include/mimetic "${SRCROOT}/Headers/"
	cp ./build/lib/libmimetic.a "${SRCROOT}/Libraries/macOS/"

Note: If make failed with the following error,

	mmfile.cxx:60:14: error: ordered comparison between pointer and zero ('char *' and 'int')

retry after editing mimetic/os/mmfile.cxx to replace line 60

	if(m_beg > 0)

with

	if(m_beg != nullptr)


=======================================================================
duktape - 2.5.0
=======================================================================

Download the source from

	http://duktape.org/

and extract the archive and copy and rename the src directory.

	cd duktape-2.5.0
	cp -R src "${SRCROOT}/Source/duktape"

=======================================================================
libxml2 - 2.9.4
=======================================================================

Download the source for libxml2 from

	http://xmlsoft.org/downloads.html

and extract the archive. Then

	cd libxml2-2.9.4
	./configure CFLAGS="-mmacosx-version-min=10.9" --disable-shared --with-threads --without-python --without-zlib --without-lzma --prefix="$(pwd)/build"
	make install

Copy the header and library files.

	cp -R ./build/include/libxml2 "${SRCROOT}/Headers"
	cp ./build/lib/libxml2.a "${SRCROOT}/Libraries/macOS"


=======================================================================
libxslt - 1.1.29
=======================================================================

Download the source from

	http://xmlsoft.org/downloads.html

and extract the archive. Then

	cd libxslt-1.1.29
	./configure CFLAGS="-mmacosx-version-min=10.9" --disable-shared --without-python --without-crypto --prefix="$(pwd)/build"
	make install

Copy the header and library files.

	cp -R ./build/include/libxslt ./build/include/libexslt "${SRCROOT}/Headers"
	cp ./build/lib/libexslt.a ./build/lib/libxslt.a "${SRCROOT}/Libraries/macOS"


=======================================================================
freetype - 2.7
=======================================================================

Download freetype from

	https://www.freetype.org/download.html

and extract the archive. Then

	cd freetype-2.7
	CFLAGS="-mmacosx-version-min=10.9" ./configure --disable-shared --with-png=no --with-bzip2=no --with-harfbuzz=no --with-png=no --with-zlib=no --prefix="$(pwd)/build"
	make install

Copy the header and library files.

	cp -R ./build/include/freetype2 "${SRCROOT}/Headers"
	cp ./build/lib/libfreetype.a "${SRCROOT}/Libraries/macOS"


=======================================================================
fontconfig - 2.12.3
=======================================================================

Download fontconfig from

	https://www.freedesktop.org/wiki/Software/fontconfig/
	
	https://www.freedesktop.org/software/fontconfig/release/fontconfig-2.13.0.tar.bz2
	
	2.13.1 has a bug where it wont' compile on Mac : https://www.spinics.net/lists/font-config/msg06311.html
	anything after 2.12.3 has another bug where it seems to want pkgconfig : https://stackoverflow.com/questions/49466963/how-to-compile-fontconfig-without-uuid/51502080

and extract the archive. Then

	cd fontconfig-2.12.3
	CFLAGS="-mmacosx-version-min=10.9 -stdlib=libc++" ./configure --disable-shared --prefix="$(pwd)/build" FREETYPE_CFLAGS="-I${SRCROOT}/Headers/freetype2" FREETYPE_LIBS="-L${SRCROOT}/Libraries/macOS -lfreetype" LDFLAGS="-L${SRCROOT}/Libraries/macOS"
	make install

Copy the header and library files.

	cp -R ./build/include/fontconfig "${SRCROOT}/Headers"
	cp ./build/lib/libfontconfig.a "${SRCROOT}/Libraries/macOS"


=======================================================================
podofo - 0.9.6
=======================================================================

Podofo seemed to have a bunch of dependencies, all which had their own dependencies, all of which had compile errors, either because of other issues, or more dependencies.  In the end I gave up and installed brew.  It should be possible to compile without this, but this does make it much simpler.

/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

brew install pkg-config
brew install Libidn
brew install libjpeg
brew install Libtiff
brew install LibPng
brew install LibUnistring
brew install fontconfig
brew install freetype
brew install libiconv
brew install libgcrypt

Download podofo from

	http://podofo.sourceforge.net/download.html

and extract the archive. Then

	cd podofo-0.9.6

	CFLAGS="-mmacosx-version-min=10.9" && CPPFLAGS="-mmacosx-version-min=10.9" && cmake -G "Unix Makefiles" -DWANT_FONTCONFIG:BOOL=TRUE -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX="./_build" -DPODOFO_BUILD_STATIC:BOOL=TRUE -DPODOFO_BUILD_SHARED:BOOL=FALSE -DLIBCRYPTO_INCLUDE_DIR="${SRCROOT}/Headers/openssl" -DPODOFO_BUILD_LIB_ONLY=TRUE -DCMAKE_C_FLAGS="-mmacosx-version-min=10.9 -stdlib=libc++" -DCMAKE_CXX_FLAGS="-mmacosx-version-min=10.9 -stdlib=libc++" ./
		
	make install

Copy the header and library files.

	cp -R ./_build/include/podofo "${SRCROOT}/Headers"
	cp ./_build/lib/libpodofo.a "${SRCROOT}/Libraries/macOS"


=======================================================================
libjpeg-turbo - 2.0.2
=======================================================================

Download the source from

	http://www.libjpeg-turbo.org/

and extract the archive. Then

	CFLAGS="-mmacosx-version-min=10.9" && CPPFLAGS="-mmacosx-version-min=10.9" && cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="./_build" -DCMAKE_C_FLAGS="-mmacosx-version-min=10.9 -stdlib=libc++" -DCMAKE_CXX_FLAGS="-mmacosx-version-min=10.9 -stdlib=libc++" ./
	make install

Copy the header and library files.

	cp -R ./_build/include "${SRCROOT}/Headers/libturbojpeg"
	cp ./_build/lib/libturbojpeg.a "${SRCROOT}/Libraries/macOS"

=======================================================================
Poco 1.9.2
=======================================================================

Download the source from

	http://pocoproject.org/download/

and extract the archive. Then

	cd poco-1.9.2-all
		
	./configure --config=Darwin64-clang-libc++ --prefix=_build_macos --no-sharedlibs --static --poquito --omit=Data,MongoDB,Crypto,Net,XML,PageCompiler,Redis,Encodings --no-tests --no-samples
	
But libtool has an issue with the --static flag, it throws an error.  You can't just leave it out as you get dylibs instead of .a files.  So edit the files in build/config/* and change 

LIB     = libtool --mode=compile gcc -all-static -o
to
LIB     = ar -cr

then do :
	
	make -s -j install
	
Copy the header and library files.

	cp -R ./_build_macos/include/Poco "${SRCROOT}/Headers"
	cp ./_build_macos/lib/libPocoFoundation.a ./_build_macos/lib/libPocoZip.a ./_build_macos/lib/libPocoJSON.a "${SRCROOT}/Libraries/macOS"
	
=======================================================================
